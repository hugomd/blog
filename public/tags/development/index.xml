<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Hugo&#39;s Blog</title>
    <link>https://blog.hugo.sx/tags/development/</link>
    <description>Recent content in Development on Hugo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Oct 2015 22:12:05 +1100</lastBuildDate>
    <atom:link href="https://blog.hugo.sx/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Monash Ninja: what, how, and the end result</title>
      <link>https://blog.hugo.sx/post/monash-ninja/</link>
      <pubDate>Mon, 12 Oct 2015 22:12:05 +1100</pubDate>
      
      <guid>https://blog.hugo.sx/post/monash-ninja/</guid>
      <description>

&lt;h3 id=&#34;what-is-monash-ninja&#34;&gt;What is Monash Ninja?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://monash.ninja&#34;&gt;Monash Ninja&lt;/a&gt; was week-long treasure-hunt-like event (14 Sept. to 21 Sept. 2015) run by &lt;a href=&#34;http://wired.org.au/&#34;&gt;Wired Monash&lt;/a&gt;. The concept and code was created by &lt;a href=&#34;http://hugo.sx/&#34;&gt;me&lt;/a&gt; (then Vice President) and the design for the website was created by &lt;a href=&#34;http://terencehuynh.com/&#34;&gt;Terence&lt;/a&gt; (then Secretary).&lt;/p&gt;

&lt;p&gt;I purchased the &lt;em&gt;monash.ninja&lt;/em&gt; domain in April 2015 on a whim and then decided to come up with an idea for it. I had been thinking it would be fun for Wired to run a treasure hunt but thought it would be difficult to find participants as treasure hunts require effort for the hunters, but also for the organisers. This lead me to the idea of putting up (read: hiding) codes around campus (with help from Terence) that could then be entered on a website. Easy participation, a &amp;ldquo;keep your eyes peeled&amp;rdquo; approach, rather than actively looking for clues, and fairly easy implementation and organisation.&lt;/p&gt;

&lt;h3 id=&#34;design-and-implementation&#34;&gt;Design and Implementation&lt;/h3&gt;

&lt;p&gt;Monash Ninja consists of a simple HTML + JQuery/Ajax + CSS frontend with a &lt;a href=&#34;http://flask.pocoo.org&#34;&gt;Flask&lt;/a&gt; + MySQL backend.&lt;/p&gt;

&lt;p&gt;The database contained 30 codes and had the following schema:
- code_id INT&lt;br /&gt;
- code VARCHAR&lt;br /&gt;
- used BOOL&lt;br /&gt;
- student_id INT&lt;/p&gt;

&lt;p&gt;The API was super simple:
- /all - JSON of entire database (only for local use)&lt;br /&gt;
- /get - given a code and a student ID, validates the code and returns success/failure.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re interested in seeing the code, it&amp;rsquo;s on the Wired Monash Github, &lt;a href=&#34;https://github.com/wiredmonash/monash.ninja&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Poster design:
&lt;img src=&#34;http://i.hugo.sx/longterm/K4ENY.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Website design:
&lt;img src=&#34;http://i.hugo.sx/longterm/udf9y.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The prizes were worth over $500 as a result of &lt;a href=&#34;http://unihack.net/&#34;&gt;UNIHACK&lt;/a&gt;&amp;rsquo;s success:
- 16x MSA vouches ($15 ea.)&lt;br /&gt;
- 4x Google Cardboard ($20 ea.)&lt;br /&gt;
- 10x iTunes Gift Vouchers ($30 ea.)&lt;/p&gt;

&lt;h3 id=&#34;end-result&#34;&gt;End Result&lt;/h3&gt;

&lt;p&gt;By the end of the week 26 of the 30 codes had been found and validated, of which around 2 were ripped down, presumably by university staff. To remedy this, we hid these two in the source code of wired.org.au and monash.ninja. Most of the prizes were collected on the following Monday after the event. Some participants were unable to collect their prizes and scheduled alternative times, while others did not respond.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m pleased with the success of Monash Ninja and hope that it can continue to be run each year under the Wired Monash banner.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d like to thank Terence for putting up with my stupid questions, helping me distribute and hide the codes, give out the prizes and for allowing me to sticky tape a ninja code to his back for the duration of the club&amp;rsquo;s Annual General Meeting (AGM).&lt;/p&gt;

&lt;h3 id=&#34;what-would-i-do-next-time&#34;&gt;What would I do next time?&lt;/h3&gt;

&lt;p&gt;Find an easier way to keep track of people. Specifically, taking emails, or using Facebook login, instead of just a student ID and code - it would have made it a little easier to notify people they&amp;rsquo;d received a prize.&lt;/p&gt;

&lt;p&gt;Store more information on the database: whether prizes have been given out, website feedback, and general statistics such as how many codes validated each day.&lt;/p&gt;

&lt;h3 id=&#34;when-will-monash-ninja-return&#34;&gt;When will Monash Ninja return?&lt;/h3&gt;

&lt;p&gt;Hopefully next year! &lt;sup&gt;&lt;sup&gt;Maybe during O-week?? (hint hint)&lt;/sup&gt;&lt;/sup&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What I learned at UNIHACK Melbourne</title>
      <link>https://blog.hugo.sx/post/what-i-learned-at-unihack-melbourne/</link>
      <pubDate>Fri, 08 Aug 2014 12:00:00 +1000</pubDate>
      
      <guid>https://blog.hugo.sx/post/what-i-learned-at-unihack-melbourne/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://unihack.net/&#34;&gt;UNIHACK Melbourne&lt;/a&gt; is a Melbourne-based hackathon that was run last weekend (August &lt;sup&gt;8&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt;) and is open to all university and TAFE students in Victoria.&lt;/p&gt;

&lt;p&gt;Over the past few years, I&amp;rsquo;ve heard &lt;em&gt;lots&lt;/em&gt; about hackathons, particularly the ones run in the USA, and the amount of creative potential they seem to unleash. You hear the stories about how Facebook Video and Chat &lt;a href=&#34;https://www.facebook.com/video/video.php?v=238358730483&#34;&gt;emerged from hackathons&lt;/a&gt;. This, for me, sounded exciting.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;An opportunity to stand out from the crowd.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I come up with a fair few ideas every month but, most of the time, I don&amp;rsquo;t have the courage to pursue them, having had failed projects in the past along with the feeling that comes with working on a project for too long (and not making much progress). This hackathon presented an opportunity for me to build something quickly, just a prototype, and an opportunity to stand out from the crowd. The reason I say this could make me stand out is that I&amp;rsquo;ve always felt like a stock-standard programmer - I have experience to do things but, when I browse Github or code that my colleagues write, I feel that I lack the skill they do.&lt;/p&gt;

&lt;p&gt;UNIHACK, like many hackathons, centred itself around a theme, &amp;lsquo;discovery&amp;rsquo;, which made it easier to narrow down what I wanted to build. I came up with the idea for &lt;a href=&#34;http://craft.lc/&#34;&gt;Craft!&lt;/a&gt; about a week before the hackathon began and that week felt like forever, I felt super eager to get started.&lt;/p&gt;

&lt;p&gt;I gained a number of new skills at the hackathon, not ones that might be particularly useful working in the real world, but would help me achieve personal goals.&lt;/p&gt;

&lt;p&gt;The first thing I learned was to time manage, right from the start. I spent a good few hours trying to get a specific part of the code working and, as always, it was one line of code that fixed it. I tend to do this with exams and assignments, where I get stuck on a question for too long and don&amp;rsquo;t move on.&lt;/p&gt;

&lt;p&gt;Secondly, I found that it&amp;rsquo;s far better to build a simple prototype, completely lacking in features but with one main component (the main idea). Initially, my plan was to build a Minecraft server automator (&amp;lsquo;one-click&amp;rsquo;) with a number of tiered plans (hourly pricing). I thought I could crank out a bunch of features in a short amount of time. I was wrong. I&amp;rsquo;m not trying to discourage anyone reading this, and to clarify, I was working with Python (easy, right?), which I learned a month ago. I was also using the &lt;a href=&#34;http://flask.pocoo.org/&#34;&gt;Flask&lt;/a&gt; framework, which I hadn&amp;rsquo;t touched until a day before the hackathon.&lt;/p&gt;

&lt;p&gt;The third thing I learned is probably the most important - share your ideas. I came into the hackathon intent on keeping my idea to myself, that I would be sharing it a couple days later anyway, everyone could wait. This is entirely the wrong approach. Think about it. You&amp;rsquo;re at a hackathon with a bunch of other like-minded people. They think like you but not &lt;em&gt;exactly&lt;/em&gt; like you - so, of course, they could &lt;em&gt;add&lt;/em&gt; to your idea. They might even want to &lt;em&gt;help you work on it&lt;/em&gt;. At a hackathon, sharing will help you flesh out your idea and make new friends.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;No one will put you down.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Don&amp;rsquo;t worry about who wins the hackathon (if anyone wins) - the judges are not there so much to criticise but to provide feedback that might help your product function in the real world.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Perfect Weechat Setup</title>
      <link>https://blog.hugo.sx/post/the-perfect-weechat-setup-2/</link>
      <pubDate>Sat, 26 Jul 2014 13:41:12 +1000</pubDate>
      
      <guid>https://blog.hugo.sx/post/the-perfect-weechat-setup-2/</guid>
      <description>

&lt;h3 id=&#34;update-13-08-15&#34;&gt;Update 13/08/15&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;ve been getting a few emails asking for my configuration files so I&amp;rsquo;ve uploaded them: &lt;a href=&#34;http://s3.hugo.sx/files/weechat/13-07-15/weechat.conf&#34;&gt;weechat.conf&lt;/a&gt;, irc.conf (temporarily unavailable). &amp;ldquo;weechat.conf&amp;rdquo; contains general configurations for looks but &amp;ldquo;irc.conf&amp;rdquo; contains a setting that lets you create indented channels, under their respective server:&lt;br /&gt;
&lt;img src=&#34;http://s3.hugo.sx/ss/qaUj7.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;what-we-ll-be-doing&#34;&gt;What we&amp;rsquo;ll be doing&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Important things to know&lt;/li&gt;
&lt;li&gt;Installing &lt;a href=&#34;http://weechat.org/&#34;&gt;Weechat&lt;/a&gt;.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Installing plugins&lt;/li&gt;
&lt;li&gt;Making it look pretty.&lt;/li&gt;
&lt;li&gt;Setting up &lt;a href=&#34;http://wiki.znc.in/ZNC&#34;&gt;ZNC&lt;/a&gt; which lets you stay connected to IRC indefinitely.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;prior-knowledge&#34;&gt;Prior knowledge&lt;/h3&gt;

&lt;p&gt;Before we get started, it&amp;rsquo;s vital that you have some command line experience, whether it&amp;rsquo;s a little bash here and there or programming. I say this not to dissuade you from installing weechat but because if you don&amp;rsquo;t like CLI (Command Line Interface), you&amp;rsquo;d be far more comfortable using a GUI (Graphic User Interface).&lt;/p&gt;

&lt;h5 id=&#34;weechat-irc-terminology&#34;&gt;Weechat/IRC terminology&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;buffers&lt;/code&gt; are essentially &amp;lsquo;windows&amp;rsquo; in which messages/chats/settings options are shown. You can generally switch between these using &lt;code&gt;meta-[1 .. 9]&lt;/code&gt;. The first buffer, labelled 1, contains connected server buffers by default, that&amp;rsquo;s the servers you&amp;rsquo;re connected to. You can switch between these servers using &lt;code&gt;Ctrl+X&lt;/code&gt;, that&amp;rsquo;s &lt;em&gt;not&lt;/em&gt; the same as switching between buffers.&lt;/li&gt;
&lt;li&gt;key bindings - escape is the &amp;lsquo;meta&amp;rsquo; key on Mac.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/query&lt;/code&gt; and &lt;code&gt;/msg&lt;/code&gt; do different things - &lt;code&gt;/query&lt;/code&gt; opens a new buffer in which you can type messages to users while &lt;code&gt;/msg&lt;/code&gt; will send a direct message to a user without opening a buffer.&lt;/li&gt;
&lt;li&gt;the weechat configuration system runs on a specific hierarchy (it&amp;rsquo;s quite smart) - specific settings are denoted by the label they start with. For instance, general IRC settings are denoted by &lt;code&gt;irc&lt;/code&gt; while weechat settings are denoted by &lt;code&gt;weechat&lt;/code&gt;. This is generally useful to know when modifying configuration from within weechat, which you can do using &lt;code&gt;/set [options]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Browsing options - you can use the iset.pl plugin to search for key terms in configuration or you can use &lt;code&gt;/set weechat.*&lt;/code&gt; and &lt;code&gt;/set irc.*&lt;/code&gt; to view settings available. You can use the &lt;code&gt;*&lt;/code&gt; symbol to list all options available in that hierarchy.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Keeping these points in mind, we can begin our install and setup.&lt;/p&gt;

&lt;h3 id=&#34;install&#34;&gt;Install&lt;/h3&gt;

&lt;p&gt;Head over to &lt;a href=&#34;http://weechat.org/&#34;&gt;weechat.org&lt;/a&gt; and download it from source or just use the repositories available on most linux distros:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install weechat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also use &lt;a href=&#34;http://brew.sh/&#34;&gt;homebrew&lt;/a&gt; on Mac.&lt;a href=&#34;http://brew.sh/&#34;&gt;http://brew.sh/&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install weechat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or even &lt;a href=&#34;https://www.macports.org/&#34;&gt;Macports&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo port install weechat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On Windows, you can use &lt;a href=&#34;http://www.cygwin.com/&#34;&gt;Cygwin&lt;/a&gt;, although I haven&amp;rsquo;t personally experiemented with it.&lt;/p&gt;

&lt;h3 id=&#34;plugins&#34;&gt;Plugins&lt;/h3&gt;

&lt;p&gt;Now onto one of my favourite parts about weechat. The plugins. Weechat has a whole range of plugins for just about everything you can and can&amp;rsquo;t think of. Most of the scripts are available &lt;a href=&#34;http://weechat.org/scripts/&#34;&gt;here&lt;/a&gt; and those that aren&amp;rsquo;t are likely on Github.&lt;/p&gt;

&lt;p&gt;The scripts that I currently use are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://weechat.org/scripts/source/buddylist.pl.html/&#34;&gt;buddylist.pl&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;creates a buddy list of select nicknames and tells you if they&amp;rsquo;re online. Also allows you to easily query/message them&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://weechat.org/scripts/source/buffers.pl.html/&#34;&gt;buffers.pl&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://weechat.org/scripts/source/iset.pl.html/&#34;&gt;iset.pl&lt;/a&gt;&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;settings browser&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://weechat.org/scripts/source/notification_center.py.html/&#34;&gt;notification_center.py&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;show &lt;a href=&#34;http://i.sqr.cat/VeZN/+&#34;&gt;notifications&lt;/a&gt; on Mac&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://weechat.org/scripts/source/prism.py.html/&#34;&gt;prism.py&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;send rainbow coloured text&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://weechat.org/scripts/source/text_item.py.html/&#34;&gt;text_item.py&lt;/a&gt;&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;useful when adding custom text to the status bar&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://weechat.org/scripts/source/urlserver.py.html/&#34;&gt;urlserver.py&lt;/a&gt;&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;if an URL goes across two lines in weechat, it has a tendency to break the link for me, this plugin automatically shortens all URLs on a localhost.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://weechat.org/scripts/source/shell.py.html/&#34;&gt;shell.py&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;lets you run shell commands from weechat and pipe them to chat. (My favourite is &lt;code&gt;/shell -o toilet -F border -f future --gay --irc &amp;quot;This is pretty cool...&amp;quot;&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these plugins are fairly easy to install, you can just use the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/script install [plugin]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or, if the plugin isn&amp;rsquo;t available in the weechat repository, you can download it and place it in the &lt;code&gt;~/.weechat/plugins&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;Typing &lt;code&gt;/script&lt;/code&gt; will give you a list of available plugins to install - you can then use the arrow keys to navigate through the list and then type &lt;code&gt;i&lt;/code&gt; followed by the enter key to install the selected plugin.&lt;/p&gt;

&lt;h3 id=&#34;making-it-look-pretty&#34;&gt;Making it look pretty&lt;/h3&gt;

&lt;p&gt;There&amp;rsquo;s a lot you can do to weechat to make it look the way you want but I personally love the amount of colour-related customisation  available. I explained how the settings worked in &lt;em&gt;Weechat/IRC terminology&lt;/em&gt; section and while you can choose to use &lt;code&gt;/set weechat.*&lt;/code&gt; to find all of the settings, it&amp;rsquo;s significantly easier to use the iset plugin.&lt;/p&gt;

&lt;p&gt;To use iset, simply go to any buffer and type &lt;code&gt;/iset&lt;/code&gt;, this will open up a new buffer with a long list of all the weechat settings. From there, you can type in the name of a setting you might want to change or simply browse through the list of settings. What makes iset especially useful is the fact that it will explain what the settings change.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m currently using toggles so that I can hide certain parts of the interface when I want to, including the nicklist, the topic, the status and the buffer list. This &lt;a href=&#34;http://weechat.org/files/doc/devel/weechat_user.en.html#screen_layout&#34;&gt;weechat wiki page&lt;/a&gt; does a very good job of explaining the screen layout, which will be good to know when you&amp;rsquo;re changing settings.&lt;/p&gt;

&lt;p&gt;Toggles are fairly simple to setup, for example, to toggle the buffer bar, press &lt;code&gt;Esc + B&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/key bind meta-b /bar toggle buffers
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My weechat currently looks like this:
&lt;img src=&#34;http://i.hugo.sx/ss/4o5bT.png&#34; alt=&#34;Weechat 1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The main changes I&amp;rsquo;ve made are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/set weechat.look.buffer_time_format
/set weechat.look.prefix_align “right”
/set weechat.look.align_end_of_lines message
/set weechat.look.prefix_same_nick “↳”
/set weechat.look.prefix_join “—&amp;gt;”
/set weechat.look.prefix_quit &amp;lt;—”
—
/set weechat.look.buffer_time_format “%H:%M”
/set weechat.look.prefix_align “none”
/set weechat.look.align_end_of_lines “message”
/set weechat.look.prefix_same_nick “”
/set weechat.look.prefix_join “”
—
/set irc.look.display_host_quit off
/set irc.look.display_host_join off
/set irc.look.display_host_join_local off
/set irc.look.color_nicks_in_server_messages off
—
/set buffers.look.show_number off
—
/set weechat.look.read_marker none
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;setting-up-znc&#34;&gt;Setting up ZNC&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://znc.in/&#34;&gt;ZNC&lt;/a&gt; is what&amp;rsquo;s called an IRC bouncer and is particularly useful if you want to remain connected to an IRC server all the time. It&amp;rsquo;s nice to be able to connect to a server and have some &amp;lsquo;history&amp;rsquo; of the channel; you can see what people have been discussing and then add to the conversation immediately. It also allows other users to leave you a message.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;DigitalOcean&lt;/a&gt; has a particularly &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-znc-an-irc-bouncer-on-an-ubuntu-vps&#34;&gt;good guide&lt;/a&gt; on setting up ZNC that should work on most servers or on a home computer.&lt;/p&gt;

&lt;p&gt;Now that I look back at the top paragraph I realise I haven&amp;rsquo;t explained ZNC all that well. The essence of it is, you run a server that connects to IRC for you, then, when you want to use IRC, you connect via that server.&lt;/p&gt;

&lt;p&gt;If you can&amp;rsquo;t afford to pay $5 a month to run ZNC, haven&amp;rsquo;t the know-how with Linux to set it up, can&amp;rsquo;t be bothered or don&amp;rsquo;t have a homeserver you can use, shoot me a message on &lt;a href=&#34;http://twitter.com/hugojmd&#34;&gt;Twitter&lt;/a&gt; or elsewhere and I&amp;rsquo;d be happy to set up an account for you on my own server.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>