apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog
  namespace: blog
spec:
  selector:
    matchLabels:
      app: blog
  template:
    metadata:
      labels:
        app: blog
    spec:
      containers:
      - image: docker.pkg.github.com/hugomd/blog/blog:<VERSION>
        name: blog
        ports:
        - containerPort: 80
      imagePullSecrets:
      - name: github-registry
---
apiVersion: v1
kind: Service
metadata:
  name: blog
  namespace: blog
spec:
  selector:
    app: blog
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: blog
  namespace: blog
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
spec:
  rules:
  - host: hugo.md
    http:
      paths:
      - path: /
        backend:
          serviceName: blog
          servicePort: 80
  tls:
    - secretName: blog-tls-prod-cert
      hosts:
        - hugo.md
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: lightning
  namespace: blog
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
spec:
  rules:
  - host: lightning.hugo.md
    http:
      paths:
      - path: /
        backend:
          serviceName: inlets
          servicePort: 8081
  tls:
    - secretName: lightning-tls-prod-cert
      hosts:
        - lightning.hugo.md
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: handshake
  namespace: blog
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: hugo.sgy
    http:
      paths:
      - path: /
        backend:
          serviceName: blog
          servicePort: 80
